let dayCount = 0;
let departureDate; // Declare departureDate at a higher scope
let destinationDate; // Declare destinationDate at a higher scope

btnNextProgress.addEventListener("click", function () {
  let lastActiveIndex = -1;

  const currentProgressBarWidth = subContSuccessProgressBar.offsetWidth;
  const newProgressBarWidth = currentProgressBarWidth + contProgressWidth * 0.2;
  const currentIconProgressBarLeft = parseFloat(
    window.getComputedStyle(iconProgressBar).getPropertyValue("left")
  );
  const newIconProgressBarLeft =
    currentIconProgressBarLeft + contProgressWidth * 0.2;

  contNumbs.forEach((contNumb, index) => {
    if (
      contNumb.closest(".cont-main-sub-progress").classList.contains("active")
    ) {
      lastActiveIndex = index;
    }
  });

  if (lastActiveIndex !== -1 && lastActiveIndex < contNumbs.length - 1) {
    contNumbs[lastActiveIndex + 1]
      .closest(".cont-main-sub-progress")
      .classList.add("active");
    iconProgressBar.style.left = newIconProgressBarLeft + "px";
    subContSuccessProgressBar.style.width = newProgressBarWidth + "px";
    progressBarsText[lastActiveIndex + 1].textContent = "";
    progressBarsText[lastActiveIndex].innerHTML =
      '<span class="material-symbols-outlined">done</span>';
    allSubContInfNewTour[lastActiveIndex].classList.remove("active");
    allSubContInfNewTour[lastActiveIndex + 1].classList.add("active");
  }

  if (lastActiveIndex == 0) {
    sub2ContInfNewTour.style.overflowX = "visible";
  }

  if (lastActiveIndex != 0) {
    sub2ContInfNewTour.style.overflowX = "hidden";
  }

  if (lastActiveIndex == 1) {
    var departureDateParts = inputDepartureDate.value.split("/");
    var destinationDateParts = inputDestinationDate.value.split("/");
    departureDate = new Date(departureDateParts[2], departureDateParts[1] - 1, departureDateParts[0]);
    destinationDate = new Date(destinationDateParts[2], destinationDateParts[1] - 1, destinationDateParts[0]);
    var timeDifference = destinationDate - departureDate;
    var dayDifference = timeDifference / (1000 * 60 * 60 * 24) + 1;

    for (let i = 0; i < dayDifference; i++) {
      addSchedule(i); // Pass the current day index to the function
    }
  }
});

function addSchedule(dayIndex) {
  dayCount++;
  const container = document.getElementById("cont-tour-schedule");
  const scheduleDate = new Date(departureDate);
  scheduleDate.setDate(departureDate.getDate() + dayIndex); // Calculate the date for the current dayIndex

  // Format the schedule date to the desired format (dd/mm/yyyy)
  const formattedDate = scheduleDate.toLocaleDateString('vi-VN');

  const newSchedule = document.createElement("div");
  newSchedule.className = "cont-date-schedule";
  newSchedule.innerHTML = `
                <div id="cont-tour-schedule-title" class="cont-inf-field">
                    <span style="font-weight: bold; font-size: 1.5rem; text-align: center;">Day ${dayCount} - ${formattedDate}</span>
                    <label for="input-tour-schedule-title-${dayCount}" class="title-field">Title Schedule <span>(required)</span></label>
                    <input type="text" id="input-tour-schedule-title-${dayCount}" class="input-field" placeholder="e.g: Khám phá Thác Datanla và Đồi Cỏ xanh..." maxlength="100" required oninput="countChar100(this, document.querySelector('.tour-schedule-title-char-count-${dayCount}'))">
                    <span class="tour-schedule-title-char-count-${dayCount} char-count">100/100</span>
                </div>
                <div class="cont-schedule-content cont-inf-field">
                    <label for="input-tour-description-schedule-${dayCount}" class="title-field">Description Schedule <span>(required)</span></label>
                    <div class="sub-cont-schedule-content input-field">
                        <div style="border: none;" id="input-tour-description-schedule-${dayCount}" class="input-field" contenteditable="true"></div>
                        <div class="cont-tool-editor">
                            <a class="btn btn-tertiary" href="#" onclick="document.execCommand('bold', true, '')"><strong>B</strong></a>
                            <a class="btn btn-tertiary" href="#" onclick="document.execCommand('italic', true, '')"><em>I</em></a>
                            <a class="btn btn-tertiary" href="#" onclick="document.execCommand('underline', true, '')"><u>U</u></a>
                        </div>
                    </div>
                </div>
            `;
  container.appendChild(newSchedule);
}
